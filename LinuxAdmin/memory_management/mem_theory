#MEMOTY PAGES
Memory is organized in pages (page frames), 4kib default, and the OS uses memory pages to address memory
A process can have a major and minor page fault counter


#VIRTUAL MEMORY AND RSS
Linux uses virtual memory which is mapped to physical memory
A process will claim a memory address in virtual memory.
In turn virtual memory will claim resident memory (RSS).
A process can only see the physical memory pages.
Physical memory pages can be shared between processes.
Virtual offers following benefits:
- allows process isolation
- The kernel is free to change the physical address to which a virtual address is mapped
- The third purpose is the possibility to give addresses to things that are not actually in RAM. See mmap
- COW



#TLB
The "tlb"  associates and keeps track of  the virtual memory address with the resident memory that was claimed.
The "tlb" is hardware cache on the CPU. Not to be confused with actual "CPU Cache"
It speeds up the translation between virt memory address  and physical memory address.
It sits between the CPU and Main Memory.

Each process needs its own virtual page that has mappings of virtual addresses to physical addresses.

A "minor page fault" is a virtual memory address which has not claimed a rss yet.
A "major page fault" is when a page is swapped out or needs to be loaded from a file on disk

#Copy on Write - COW
When a parent process creates a child process, both processes will initially share the same pages in memory.
If any of these processes tries to modify any of the pages, then a copy of this page will be created
to avoid modifying the original page.


#MEMORY LEAKS
1) Program requests memory but there is no claim for it in RSS. 
It will keep using VM thus making a leak in VM.
The total amounnt of VM allocated can be seen in cat /proc/meminfo  | grep -i Committed_AS

2) Program may start requesting RSS with out using it and this can be a real problem crashing the OS
Use valgrind --tool=memcheck bash  --leak-check=full  to examine memory leaks



#ACTIVE MEMORY Vs INACTIVE MEMORY

Note: Anon Memory is memory with no physical address.

Active Memory: Memory used more than once with out being swapped/reclaimed
Inactive Memory: Memory used only once with out being swapped/reclaimed
Active(anon): Anonymous memory that has been used more recently and usually not swapped out
Inactive Memory(anon): Anonymous memory that has not been used recently and can be swapped out
Active(file):  The amount of file cache memory, in kibibytes, that is in active use, or was in active use since the last time the system reclaimed memory.
Inacctive(file): The amount of file cache memory, in kibibytes, that is newly loaded from the disk, or is a candidate for reclaiming.

--





